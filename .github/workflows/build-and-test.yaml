name: Build And Test

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      commit-sha: ${{ steps.get-commit-sha.outputs.commit-sha}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get latest commit SHA
        id: "get-commit-sha"
        run: echo "commit-sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Cache checked out repository
        uses: actions/cache@v3
        with:
          path: ${{ runner.workspace }}/
          key: ${{ runner.os }}-${{ github.repository }}-repo-${{ steps.get-commit-sha.outputs.commit-sha}}

      - name: Restore/cache Go
        id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Download dependency
        run: go mod tidy

      - name: Build and Race
        run: go build -v -race .

  build-and-test:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Restore checked out repository
        uses: actions/cache@v3
        with:
          path: ${{ runner.workspace }}/
          key: ${{ runner.os }}-${{ github.repository }}-repo-${{ needs.prepare.outputs.commit-sha }}

      - name: Restore Go
        id: setup-go
        uses: actions/setup-go@v4

#      - name: Restore/cache build dependencies
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.cache/go-build
#            ~/go/pkg/mod
#          key: ${{ runner.os }}-${{ github.repository }}-godeps-${{ hashFiles('go.mod') }}

      - name: Run unit tests
        run: go test -v ./...